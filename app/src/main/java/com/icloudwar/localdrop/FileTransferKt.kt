// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: FileTransfer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

import com.icloudwar.localdrop.FileTransferOuterClass

@kotlin.jvm.JvmName("-initializefileTransfer")
public inline fun fileTransfer(block: FileTransferKt.Dsl.() -> kotlin.Unit): FileTransferOuterClass.FileTransfer =
    FileTransferKt.Dsl._create(FileTransferOuterClass.FileTransfer.newBuilder()).apply { block() }
        ._build()

/**
 * Protobuf type `FileTransfer`
 */
public object FileTransferKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: FileTransferOuterClass.FileTransfer.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: FileTransferOuterClass.FileTransfer.Builder): Dsl =
                Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): FileTransferOuterClass.FileTransfer = _builder.build()

        /**
         * `string fileName = 1;`
         */
        public var fileName: kotlin.String
            @JvmName("getFileName") get() = _builder.fileName
            @JvmName("setFileName") set(value) {
                _builder.fileName = value
            }

        /**
         * `string fileName = 1;`
         */
        public fun clearFileName() {
            _builder.clearFileName()
        }

        /**
         * `int64 fileSize = 2;`
         */
        public var fileSize: kotlin.Long
            @JvmName("getFileSize") get() = _builder.fileSize
            @JvmName("setFileSize") set(value) {
                _builder.fileSize = value
            }

        /**
         * `int64 fileSize = 2;`
         */
        public fun clearFileSize() {
            _builder.clearFileSize()
        }

        /**
         * `int32 fileType = 3;`
         */
        public var fileType: kotlin.Int
            @JvmName("getFileType") get() = _builder.fileType
            @JvmName("setFileType") set(value) {
                _builder.fileType = value
            }

        /**
         * `int32 fileType = 3;`
         */
        public fun clearFileType() {
            _builder.clearFileType()
        }

        /**
         * `string info = 4;`
         */
        public var info: kotlin.String
            @JvmName("getInfo") get() = _builder.info
            @JvmName("setInfo") set(value) {
                _builder.info = value
            }

        /**
         * `string info = 4;`
         */
        public fun clearInfo() {
            _builder.clearInfo()
        }

        /**
         * `bytes raw = 5;`
         */
        public var raw: com.google.protobuf.ByteString
            @JvmName("getRaw") get() = _builder.raw
            @JvmName("setRaw") set(value) {
                _builder.raw = value
            }

        /**
         * `bytes raw = 5;`
         */
        public fun clearRaw() {
            _builder.clearRaw()
        }
    }
}

@kotlin.jvm.JvmSynthetic
public inline fun FileTransferOuterClass.FileTransfer.copy(block: FileTransferKt.Dsl.() -> kotlin.Unit): FileTransferOuterClass.FileTransfer =
    FileTransferKt.Dsl._create(this.toBuilder()).apply { block() }._build()

